[{"id":"1610707832191","title":"test","content":"test","post_image":"uploads\\post-image-1610707832047.png","added_date":"1610707832191"},{"id":"1581461442206","title":"This is a New Blog Post","content":"This is the content! ","post_image":"uploads/post-image-1581461442199.jpg","added_date":"1581461442206"},{"id":"1581377760891","title":"My first job as a developer","content":"In college, I met a friend at a computer club who was showing a really cool application where you can swipe between different types of clothing!\nBeing very intrigued, I asked my friend if there is any way I can help out and join the team! After some thinking, he told me to finish an assignment, and then they will consider me. Over the weekend, I finished the assignment and was right away told I can join the team, though I would be working for free. That was completely fine for me! ","post_image":"uploads/post-image-1581377760883.jpg","added_date":"1581377760891"},{"id":"1581376324100","title":"Developer Skills 101: Be Kind","content":"A big part of any job is the people you work with. Tech is no different, in that, the members of your team, who you spend a big chunk of your day with, play a huge role in how happy or sad you are in your career. Working with devs who are KIND is probably one of those things I completely and totally lucked out on! It has also given me some insight into how I want to see myself evolve and grow as a software developer.\n So getting back to the title what do I mean when I say kind? Well, I love lists and I have one for this one too: \n Approachability\n On my first ever job I was always full of questions ALL THE TIME. Everything was new and I had a bunch of learning to do (which is also what made work so much fun). My colleagues never made me feel like there was no time for my never ending questions. But in exchange for that, (and to be mindful of everyone’s time) it is always a good idea to make sure the other person has a minute before just walking up to them with “Hey I have a question”. Another thing I would like to add here is, when you have a question, it doesn’t get better than a good sweeping search on Google.\n Patience\n Sometimes it is hard to get things right in one go. And more often than not the most patiently explained answers are the ones that have stuck with me for the longest. It helps to make sure what you are explaining, gets across to the receiving end, patiently. There is also the possibility that there is something you could potentially be over-looking that would reveal itself in due course of a patient and calm conversation!\n Clear and simple answers go a long way\n “A” caused “B” which is why we have this code that does “C” and oh that is why we need “”ZZZ” for which we already have a story in the backlog. And lets assume the dev you are talking to is not familiar with alphabets (there goes 15 minutes of both your time). Keeping something very simple is probably one of the hardest things to do but becomes a necessity eventually. That brings me to my next suggestion:\n Say it in your head first\n Piggy backing on (3), simple examples and simple words go a long way in hammering home any concept. If possible one could try saying it in one’s head before actually saying it out loud. This will help you refine what you are going to say. It helps cut out on irrelevant information to keep things concise and to the point. Examples always help me grasp a concept more quickly. Sometimes it also helps to provide some background and jump right into code!\n Guidance\n “Give a man a fish, and you feed him for a day. Teach a man to fish, and you feed him for a lifetime”. When I mentored for the first ever time I was not the best at context switching (I am still not but I think I have gotten a better at this though). So when my mentee had a question on something she was working on, while I was working on something completely unrelated and I knew the exact answer to what she was asking, I was like “Hey maybe you could try this and the reason that might work is because of this”. I did not think much of it at that time, but later when I was at the receiving end of something similar it hit home. Guiding someone to get to the answer they seek is probably one of the most simple, yet powerful things we can do for each other! I enjoy digging for answers (though you will see me fumble and fret through out the whole “figuring out” period). Added bonus: You learn so much more in the process and you never know what might come in handy later on!\n ","post_image":"uploads/post-image-1581376324096.jpg","added_date":"1581376324100"},{"id":"1581375207401","title":"Why learning coding is important?","content":"Nowadays with everything being electronic, everything needs to be programmed! \n\nFrom computers, to cars, machines, or anything else it most likely requires programming!\n\nSo as a result, demand for coders keeps increasing year by year, due to all these technological advances!","post_image":"uploads/post-image-1581375207393.jpg","added_date":"1581375207401"}]